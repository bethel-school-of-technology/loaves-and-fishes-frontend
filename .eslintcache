[{"C:\\Users\\Matt\\OneDrive\\Desktop\\Final\\Front\\src\\index.js":"1","C:\\Users\\Matt\\OneDrive\\Desktop\\Final\\Front\\src\\reportWebVitals.js":"2","C:\\Users\\Matt\\OneDrive\\Desktop\\Final\\Front\\src\\App.js":"3","C:\\Users\\Matt\\OneDrive\\Desktop\\Final\\Front\\src\\components\\categories\\index.js":"4","C:\\Users\\Matt\\OneDrive\\Desktop\\Final\\Front\\src\\components\\index.js":"5","C:\\Users\\Matt\\OneDrive\\Desktop\\Final\\Front\\src\\components\\Navigation.jsx":"6","C:\\Users\\Matt\\OneDrive\\Desktop\\Final\\Front\\src\\components\\categories\\ViewNeeds.jsx":"7","C:\\Users\\Matt\\OneDrive\\Desktop\\Final\\Front\\src\\components\\categories\\SubmitNeed.jsx":"8","C:\\Users\\Matt\\OneDrive\\Desktop\\Final\\Front\\src\\components\\Home.jsx":"9","C:\\Users\\Matt\\OneDrive\\Desktop\\Final\\Front\\src\\components\\About.jsx":"10","C:\\Users\\Matt\\OneDrive\\Desktop\\Final\\Front\\src\\components\\Footer.jsx":"11","C:\\Users\\Matt\\OneDrive\\Desktop\\Final\\Front\\src\\components\\Contact.jsx":"12","C:\\Users\\Matt\\OneDrive\\Desktop\\Final\\Front\\src\\components\\Register.jsx":"13","C:\\Users\\Matt\\OneDrive\\Desktop\\Final\\Front\\src\\components\\Account.jsx":"14","C:\\Users\\Matt\\OneDrive\\Desktop\\Final\\Front\\src\\components\\Login.jsx":"15","C:\\Users\\Matt\\OneDrive\\Desktop\\Final\\Front\\src\\components\\Stylesheets\\theme.js":"16"},{"size":500,"mtime":1611728338601,"results":"17","hashOfConfig":"18"},{"size":362,"mtime":1611728338659,"results":"19","hashOfConfig":"18"},{"size":1093,"mtime":1611797770552,"results":"20","hashOfConfig":"18"},{"size":169,"mtime":1611728339125,"results":"21","hashOfConfig":"18"},{"size":403,"mtime":1611728338963,"results":"22","hashOfConfig":"18"},{"size":3170,"mtime":1611786223511,"results":"23","hashOfConfig":"18"},{"size":8370,"mtime":1611823203578,"results":"24","hashOfConfig":"18"},{"size":9814,"mtime":1611811377786,"results":"25","hashOfConfig":"18"},{"size":1934,"mtime":1611823110814,"results":"26","hashOfConfig":"18"},{"size":2813,"mtime":1611813911610,"results":"27","hashOfConfig":"18"},{"size":482,"mtime":1611728338799,"results":"28","hashOfConfig":"18"},{"size":680,"mtime":1611728338771,"results":"29","hashOfConfig":"18"},{"size":3296,"mtime":1611823129675,"results":"30","hashOfConfig":"18"},{"size":1430,"mtime":1611811359525,"results":"31","hashOfConfig":"18"},{"size":2812,"mtime":1611823120330,"results":"32","hashOfConfig":"18"},{"size":278,"mtime":1611797528710,"results":"33","hashOfConfig":"18"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},"dpg479",{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"47","usedDeprecatedRules":"36"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"50","usedDeprecatedRules":"36"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"53","usedDeprecatedRules":"36"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"68"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"71"},"C:\\Users\\Matt\\OneDrive\\Desktop\\Final\\Front\\src\\index.js",[],["72","73"],"C:\\Users\\Matt\\OneDrive\\Desktop\\Final\\Front\\src\\reportWebVitals.js",[],"C:\\Users\\Matt\\OneDrive\\Desktop\\Final\\Front\\src\\App.js",[],"C:\\Users\\Matt\\OneDrive\\Desktop\\Final\\Front\\src\\components\\categories\\index.js",[],"C:\\Users\\Matt\\OneDrive\\Desktop\\Final\\Front\\src\\components\\index.js",[],"C:\\Users\\Matt\\OneDrive\\Desktop\\Final\\Front\\src\\components\\Navigation.jsx",["74"],"import React from \"react\";\nimport { Link, withRouter } from \"react-router-dom\";\nimport { Navbar, Nav } from \"react-bootstrap\";\n// Setting up the navigation bar and links\n\nfunction Navigation(props) {\n    return (\n        <div>\n            <Navbar collapseOnSelect expand=\"lg\" bg=\"dark\" variant=\"dark\">\n                <Navbar.Brand href=\"/\">Loaves and Fish</Navbar.Brand>\n                <Navbar.Toggle aria-controls=\"responsive-navbar-nav\" />\n                <Navbar.Collapse id=\"responsive-navbar-nav\">\n                    <ul class=\"navbar-nav ml-auto\">\n                        <li\n                            class={`nav-item ${props.location.pathname === \"/\" ? \"active\" : \"\"\n                                }`}\n                        >\n                            <Link class=\"nav-link\" to=\"/\">\n                                Home\n                                <span class=\"sr-only\">(current)</span>\n                            </Link>\n                        </li>\n\n                        <li\n                            class={`nav-item ${props.location.pathname === \"/ViewNeeds\" ? \"active\" : \"\"\n                                }`}\n                        >\n                            <Link class=\"nav-link\" to=\"/viewneeds\">\n                                View Needs\n                                <span class=\"sr-only\">(current)</span>\n                            </Link>\n                        </li>\n\n                        <li\n                            class={`nav-item ${props.location.pathname === \"/SubmitNeed\" ? \"active\" : \"\"\n                                }`}\n                        >\n                            <Link class=\"nav-link\" to=\"/submitneed\">\n                                Submit Need\n                                <span class=\"sr-only\">(current)</span>\n                            </Link>\n                        </li>\n\n                        <li\n                            class={`nav-item ${props.location.pathname === \"/about\" ? \"active\" : \"\"\n                                }`}\n                        >\n                            <Link class=\"nav-link\" to=\"/about\">\n                                About\n                            </Link>\n                        </li>\n                        <li\n                            class={`nav-item ${props.location.pathname === \"/contact\" ? \"active\" : \"\"\n                                }`}\n                        >\n                            <Link class=\"nav-link\" to=\"/contact\">\n                                Contact\n                            </Link>\n                        </li>\n\n                        <li\n                            class={`nav-item ${props.location.pathname === \"/Account\" ? \"active\" : \"\"\n                                }`}\n                        >\n                            <Link class=\"nav-link\" to=\"/account\">\n                                Account\n                                <span class=\"sr-only\">(current)</span>\n                            </Link>\n                        </li>\n\n                    </ul>\n                </Navbar.Collapse>\n            </Navbar>\n        </div>\n    );\n}\n\nexport default withRouter(Navigation);","C:\\Users\\Matt\\OneDrive\\Desktop\\Final\\Front\\src\\components\\categories\\ViewNeeds.jsx",["75","76","77"],"import React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport { makeStyles } from '@material-ui/core/styles';\nimport Card from '@material-ui/core/Card';\nimport CardActions from '@material-ui/core/CardActions';\nimport CardContent from '@material-ui/core/CardContent';\nimport Button from '@material-ui/core/Button';\nimport Typography from '@material-ui/core/Typography';\nimport IconButton from '@material-ui/core/IconButton';\nimport FavoriteIcon from '@material-ui/icons/Favorite';\nimport background from \"../Stylesheets/pic.png\";\nimport \"../Stylesheets/Register.css\";\n\n//from material UI\n\n\n// Add Post to Favorites.\n//function addToFavorites() {\n//   const [favorites, setFavorites] = useState(\"\")\n\n//  const handleSubmit = (e) => {\n//      e.preventDefault();\n//       const favorites = {\n//           favorites\n//      };\n//         console.log(favorites)\n//linking axios to back end using json as temp.\n//        axios.post(`http://localhost:3000/favorites`,  favorites )\n//        .then(res => {\n//           console.log(res);\n// console.log(res.data);\n//          })\n//   }\n\n\n\n//from material UI for cards\n\nconst useStyles = makeStyles({\n    root: {\n        minWidth: 275,\n    },\n    bullet: {\n        display: 'inline-block',\n        margin: '0 2px',\n        transform: 'scale(0.8)',\n    },\n    title: {\n        fontSize: 14,\n    },\n    pos: {\n        marginBottom: 12,\n    },\n});\n\n\n// View A need post.\nfunction ViewNeeds() {\n    //added from material UI\n    const classes = useStyles();\n    const bull = <span className={classes.bullet}>•</span>;\n    const token = { headers: { Authorization: localStorage.getItem('loginToken') } };\n    const postApi = \"http://localhost:8080/needposts\";\n\n    //Axios - Gets need post from needs.json, hook up to back-end\n    const [needs, setNeeds] = useState([]);\n    const [needFavorite, setNeedFavorite] = useState([])\n\n    useEffect(() => {\n        axios.get(postApi, token)\n            .then(response => {\n                console.log(response);\n                if (response.status === 200) {\n                    setNeeds(response.data);\n                    let temporary = []\n                    needs.forEach(need => {\n                        temporary.push(false)\n\n                    })\n                    setNeedFavorite(temporary)\n                    // localStorage.setItem(\"favorites\", JSON.stringify([]))\n                }\n            })\n    }, [])\n\n    const addFavorites = (e, need) => {\n        console.log(need)\n        let favoriteNeedIndex = needs.map(n => { return n.name }).indexOf(need.name);\n        console.log(needFavorite[favoriteNeedIndex]);\n        if (needFavorite[favoriteNeedIndex] === false) {\n            needFavorite[favoriteNeedIndex] = true;\n            if (localStorage.getItem(\"favorites\")) {\n                let currentNeeds = JSON.parse(localStorage.getItem(\"favorites\"))\n                console.log(currentNeeds)\n                currentNeeds.push(need);\n                localStorage.setItem(\"favorites\", JSON.stringify(currentNeeds))\n\n            } else {\n                let temp = []\n                temp.push(need);\n                localStorage.setItem(\"favorites\", JSON.stringify(temp))\n            }\n        }\n    }\n\n\n    //:mailto\n    // const Mailto = ({ email, subject = '', body = '', children }) => {\n    //      let params = subject || body ? '?' : '';\n    //     if (subject) params += `subject=${encodeURIComponent(subject)}`;\n    //      if (body) params += `${subject ? '&' : ''}body=${encodeURIComponent(body)}`;\n\n    //      return <a href={`mailto:${email}${params}`}>{children}</a>;\n    //   };\n    //\n    if (localStorage.getItem(\"loginToken\") === null) {\n        return (\n            <div>\n\n                <img src={background} style={{ height: '50%', width: '65%', marginTop: '4vh' }} alt=\"\" />\n                <div class=\"button1\" className='mr-1'>\n                    <Button style={{ marginRight: 8, marginTop: '3vh' }} variant=\"outline-dark\" active href=\"./Register\">\n                        Register\n                        </Button>\n                    <Button style={{ marginTop: '3vh' }} variant=\"outline-dark\" active href=\"./Login\">\n                        Login\n                         </Button>\n                </div>\n\n            </div>\n        );\n    } else {\n        return (\n            <div className=\"viewneeds\">\n                <div class=\"container\">\n                    <div class=\"row align-items-center my-4\" style={{ display: 'flex', justifyContent: 'center', margin: 'auto' }}>\n                        <div class=\"col-lg-5\">\n\n\n                            <h1 class=\"font-weight-light\" style={{ display: 'flex', justifyContent: 'center', marginBottom: '20px' }}>View Needs</h1>\n\n                            <ul style={{padding:'0'}}>\n                                {\n                                    needs.map(need => {\n\n                                        return (\n                                            \n                                            <Card className={classes.root} className=\"card\" variant=\"outlined\">\n                                                <CardContent>\n                                                    <Typography className={classes.title} color=\"textSecondary\" gutterBottom>\n                                                        {need.name}\n                                                    </Typography>\n                                                    <Typography variant=\"h5\" component=\"h2\">\n                                                        {need.category}\n                                                    </Typography>\n\n                                                    <Typography className={classes.pos} color=\"textSecondary\">\n                                                        {'Description:'}\n                                                        <br />\n                                                        {need.postContent}\n\n                                                    </Typography>\n\n                                                    <Typography variant=\"body2\" component=\"p\">\n\n                                                        {'Location:'}\n                                                        <br />\n                                                        {need.city}\n\n                                                    </Typography>\n                                                    <br />\n                                                    <Typography className={classes.pos} color=\"textSecondary\">\n\n                                                        {'Need Amount:'}\n                                                        <br />\n                                                        {need.amount}\n                                                    </Typography>\n\n                                                    <CardActions>\n                                                        <Button onClick={() => { alert(\"Name: \" + need.name + \"  Email: \" + need.email + \" Phone: \" + need.phoneNumber) }}>Help Meet This Need</Button>\n\n\n                                                    </CardActions>\n\n\n  \n\n                                            \n                                                    <CardActions disableSpacing>\n                                                        <IconButton aria-label=\"add to favorites\" onClick={(e) => addFavorites(e, need)}>\n\n                                                            <FavoriteIcon />\n                                                        </IconButton>\n                                                    </CardActions>\n                                                </CardContent>\n                                                </Card>\n                                          \n                                            //onChange={(e)=>setFavorites(e.target.value)}\n                                            //onSubmit={handleSubmit}\n                                            \n                                        )\n                                            \n                                    })\n                                }\n\n                            </ul>\n\n                        </div>\n                    </div>\n                </div>\n            </div>\n\n        );\n    }\n}\n\n\nexport default ViewNeeds;","C:\\Users\\Matt\\OneDrive\\Desktop\\Final\\Front\\src\\components\\categories\\SubmitNeed.jsx",["78","79","80","81"],"import React, { useState } from \"react\";\nimport axios from \"axios\";\nimport TextField from '@material-ui/core/TextField';\nimport Input from '@material-ui/core/Input';\nimport Button from '@material-ui/core/Button';\nimport Grid from '@material-ui/core/Grid';\nimport { Redirect } from 'react-router-dom';\nimport background from \"../Stylesheets/pic.png\";\nimport \"../Stylesheets/Register.css\";\n// Submit A need forum post.\nfunction SubmitNeed() {\n    \n    const [name, setName] = useState(\"\")\n    const [postContent, setPostContent] = useState(\"\")\n    const [city, setCity] = useState(\"\")\n    const [category, setCategory] = useState(\"\")\n    const [amount, setAmount] = useState(\"\")\n\n    const [email, setEmail] = useState(\"\")\n    const [phoneNumber, setPhoneNumber] = useState(\"\")\n\n    const token = { headers: { Authorization: localStorage.getItem('loginToken') } };\n    const postApi = \"http://localhost:8080/needposts\";\n\n\n    const handleSubmit = (e) => {\n        e.preventDefault();\n        const needs = {\n            name,\n            postContent,\n            city,\n            category,\n            amount,\n            email,\n            phoneNumber\n        };\n        console.log(needs)\n        //linking axios to back end using json as temp.\n        axios.post(postApi, needs, token)\n            .then(res => {\n                console.log(res);\n                // console.log(res.data);\n            })\n\n            \n    }\n    \n    if (localStorage.getItem(\"loginToken\") === null) {\n        return (\n            <div>\n\n                <img src={background} style={{ height: '50%', width: '65%', marginTop: '4vh' }} alt=\"\" />\n                <div class=\"button1\" className='mr-1'>\n                    <Button style={{ marginRight: 8, marginTop: '3vh' }} variant=\"outline-dark\" active href=\"./Register\">\n                        Register\n                        </Button>\n                    <Button style={{ marginTop: '3vh' }} variant=\"outline-dark\" active href=\"./Login\">\n                        Login\n                         </Button>\n                </div>\n\n            </div>\n        );\n    } else {\n        return (\n\n            <div className=\"submitneed\"  >\n                <div class=\"container\" >\n                    {/* added axios styling */}\n                    <div class=\"row align-items-center my-4\" style={{ display: 'flex', justifyContent: 'center', margin: 'auto' }}>\n                        <div class=\"col-lg-5\">\n                            <h1 class=\"font-weight-light mb-4\" style={{ display: 'flex', justifyContent: 'center', margin: 'auto' }}>Submit Need</h1>\n\n                            <form onSubmit={handleSubmit} style={{ display: 'grid', justifyContent: 'center', margin: 'auto' }}>\n                                <label>\n                                    <TextField type=\"text\" name=\"name\" onChange={(e) => setName(e.target.value)}\n                                        id=\"outlined-text\"\n                                        style={{ display: \"flex\", flexDirection: \"row\", justifyContent: 'center', margin: 3 }}\n                                        label=\"Name\"\n                                        InputLabelProps={{\n                                            shrink: true,\n                                        }}\n                                        multiline\n                                        size=\"small\"\n                                        variant=\"outlined\"\n                                        display=\"inline\"\n                                    />\n                                </label>\n                                <label>\n                                    <TextField type=\"text\" name=\"postContent\" onChange={(e) => setPostContent(e.target.value)}\n                                        id=\"outlined-text\"\n                                        style={{ display: \"flex\", flexDirection: \"row\", justifyContent: 'center', margin: 3 }}\n                                        label=\"Post Content\"\n                                        InputLabelProps={{\n                                            shrink: true,\n                                        }}\n                                        multiline\n                                        size=\"small\"\n                                        variant=\"outlined\"\n                                        display=\"inline\"\n                                    />\n                                </label>\n                                <label>\n                                    <TextField type=\"text\" name=\"city\" onChange={(e) => setCity(e.target.value)}\n                                        id=\"outlined-text\"\n                                        style={{ display: \"flex\", flexDirection: \"row\", justifyContent: 'center', margin: 3 }}\n                                        label=\"City\"\n                                        InputLabelProps={{\n                                            shrink: true,\n                                        }}\n                                        multiline\n                                        size=\"small\"\n                                        variant=\"outlined\"\n                                        display=\"inline\"\n                                    />\n                                </label>\n                                <label>\n                                    <TextField type=\"text\" name=\"category\" onChange={(e) => setCategory(e.target.value)}\n                                        id=\"outlined-text\"\n                                        style={{ display: \"flex\", flexDirection: \"row\", justifyContent: 'center', margin: 3 }}\n                                        label=\"Category\"\n                                        InputLabelProps={{\n                                            shrink: true,\n                                        }}\n                                        multiline\n                                        size=\"small\"\n                                        variant=\"outlined\"\n                                        display=\"inline\"\n                                    />\n                                </label>\n                                <label>\n                                    <TextField inputProps={{ className: 'digitsOnly' }} name=\"amount\" onChange={(e) => setAmount(e.target.value)}\n                                        id=\"outlined-number\"\n                                        label=\"Amount\"\n                                        style={{ display: \"flex\", flexDirection: \"row\", justifyContent: 'center', margin: 3 }}\n                                        InputLabelProps={{\n                                            shrink: true,\n                                        }}\n                                        variant=\"outlined\"\n                                        display=\"inline\"\n                                        size=\"small\"\n                                        type=\"number\"\n                                                \n\n                                                />\n                            </label>\n                            <label>\n            <TextField type=\"text\" name=\"email\" onChange={(e) => setEmail(e.target.value)} \n                                                id=\"outlined-text\"\n                                                style={{display:\"flex\", flexDirection:\"row\", justifyContent: 'center', margin: 3 }}\n                                                label=\"Email\"\n                                                InputLabelProps={{\n                                                    shrink: true,\n                                                }}\n                                                multiline\n                                                size=\"small\"\n                                                variant=\"outlined\" \n                                                display=\"inline\"\n                                                />\n                            </label>\n                            <label>                         \n            <TextField inputProps={{className: 'digitsOnly' }}  name=\"phoneNumber\" onChange={(e) => setPhoneNumber(e.target.value)} \n                                                id=\"outlined-number\"\n                                                label=\"Phone Number\"\n                                                style={{display:\"flex\", flexDirection:\"row\", justifyContent: 'center', margin: 3 }}\n                                                InputLabelProps={{\n                                                    shrink: true,\n                                                }}\n                                                variant=\"outlined\"\n                                                display=\"inline\"\n                                                size=\"small\"\n                                                type=\"number\"\n                                                \n                                                />\n                            </label>\n                            \n\n                            {/* button to submit and redirect to viewneeds */}\n                            <Button id=\"submitButton\" type=\"submit\" variant=\"outlined\" color=\"primary\" size=\"small\"\n                            style={{display:\"flex\", flexDirection:\"row\", justifyContent: 'center', margin: 3 }} display=\"flex\"\n                            disableElevation display=\"inline\"  \n                            // onClick={event => window.location.href='/viewneeds'}\n                            >Add</Button>\n                        </form>\n                        \n                        </div>\n                    </div>\n                </div>\n            </div>\n        \n        );\n\n    }\n}\n\n\nexport default SubmitNeed;\n","C:\\Users\\Matt\\OneDrive\\Desktop\\Final\\Front\\src\\components\\Home.jsx",[],"C:\\Users\\Matt\\OneDrive\\Desktop\\Final\\Front\\src\\components\\About.jsx",[],"C:\\Users\\Matt\\OneDrive\\Desktop\\Final\\Front\\src\\components\\Footer.jsx",[],"C:\\Users\\Matt\\OneDrive\\Desktop\\Final\\Front\\src\\components\\Contact.jsx",[],"C:\\Users\\Matt\\OneDrive\\Desktop\\Final\\Front\\src\\components\\Register.jsx",[],"C:\\Users\\Matt\\OneDrive\\Desktop\\Final\\Front\\src\\components\\Account.jsx",[],"C:\\Users\\Matt\\OneDrive\\Desktop\\Final\\Front\\src\\components\\Login.jsx",["82"],"import React, { Component } from 'react';\nimport MuiThemeProvider from 'material-ui/styles/MuiThemeProvider';\nimport AppBar from 'material-ui/AppBar';\nimport RaisedButton from 'material-ui/RaisedButton';\nimport TextField from 'material-ui/TextField';\nimport axios from 'axios';\nimport { Redirect } from \"react-router-dom\";\nimport \"./Stylesheets/Register.css\";\n\n\nvar apiBaseUrl = \"http://localhost:8080/login\";\n\n\nclass Login extends Component {\n  constructor(props) {\n    super(props);\n    var localloginComponent = [];\n    localloginComponent.push(\n      <MuiThemeProvider>\n     \n        <div className=\"field container\">\n          <div className=\"formInput\" className=\"loginStyle\">\n            <TextField\n              hintText=\"Enter your Email\"\n              floatingLabelText=\"Email\"\n              onChange={(event, newValue) => this.setState({ username: newValue })}\n            />\n            <br />\n            <TextField\n              type=\"password\"\n              hintText=\"Enter your Password\"\n              floatingLabelText=\"Password\"\n              onChange={(event, newValue) => this.setState({ password: newValue })}\n            />\n            <br />\n            <RaisedButton label=\"Submit\" primary={true} style={style} onClick={(event) => this.handleClick(event)} />\n          </div>\n          </div>\n        \n      </MuiThemeProvider>\n    )\n    this.state = {\n      redirect: null,\n      username: '',\n      password: '',\n      loginComponent: localloginComponent,\n    }\n  }\n  \n  setNewRedirectState() {\n    this.setState({ redirect: \"/\" });\n  }\n\n  handleClick(event) {\n    var payload = {\n      \"username\": this.state.username,\n      \"password\": this.state.password\n    }\n    var self = this;\n    axios.post(apiBaseUrl, payload)\n      .then(function (response) {\n        console.log(response);\n          if (response.status === 200) {\n            if (response.headers.authorization) {\n            console.log(\"login success\");\n            localStorage.setItem(\"loginToken\", response.headers.authorization);\n              self.setState({ redirect: \"/\" });\n            } else { \n            console.log(\"Username password do not match\");\n            alert(response.data.success)\n          }\n        }\n        else {\n          console.log(\"Error logging in\");\n          alert(\"Error logging in\");\n        }\n      })\n      .catch(function (error) {\n        console.log(error);\n      });\n  }\n\n\n\n\n  render() {\n    if (this.state.redirect) {\n      return <Redirect to={this.state.redirect} />\n    }\n    return (\n      <div>\n        <MuiThemeProvider className=\"field\">\n          <AppBar showMenuIconButton={false}\n            title=\"Login\"\n          />\n        </MuiThemeProvider>\n\n        {this.state.loginComponent}\n      </div>\n    );\n  }\n}\n\nconst style = {\n  margin: 15,\n};\n\nexport default Login;\n","C:\\Users\\Matt\\OneDrive\\Desktop\\Final\\Front\\src\\components\\Stylesheets\\theme.js",[],["83","84"],{"ruleId":"85","replacedBy":"86"},{"ruleId":"87","replacedBy":"88"},{"ruleId":"89","severity":1,"message":"90","line":3,"column":18,"nodeType":"91","messageId":"92","endLine":3,"endColumn":21},{"ruleId":"89","severity":1,"message":"93","line":61,"column":11,"nodeType":"91","messageId":"92","endLine":61,"endColumn":15},{"ruleId":"94","severity":1,"message":"95","line":84,"column":8,"nodeType":"96","endLine":84,"endColumn":10,"suggestions":"97"},{"ruleId":"98","severity":1,"message":"99","line":148,"column":76,"nodeType":"100","endLine":148,"endColumn":92},{"ruleId":"89","severity":1,"message":"101","line":4,"column":8,"nodeType":"91","messageId":"92","endLine":4,"endColumn":13},{"ruleId":"89","severity":1,"message":"102","line":6,"column":8,"nodeType":"91","messageId":"92","endLine":6,"endColumn":12},{"ruleId":"89","severity":1,"message":"103","line":7,"column":10,"nodeType":"91","messageId":"92","endLine":7,"endColumn":18},{"ruleId":"98","severity":1,"message":"99","line":181,"column":46,"nodeType":"100","endLine":181,"endColumn":62},{"ruleId":"98","severity":1,"message":"99","line":22,"column":38,"nodeType":"100","endLine":22,"endColumn":60},{"ruleId":"85","replacedBy":"104"},{"ruleId":"87","replacedBy":"105"},"no-native-reassign",["106"],"no-negated-in-lhs",["107"],"no-unused-vars","'Nav' is defined but never used.","Identifier","unusedVar","'bull' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'needs' and 'token'. Either include them or remove the dependency array.","ArrayExpression",["108"],"react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute","'Input' is defined but never used.","'Grid' is defined but never used.","'Redirect' is defined but never used.",["106"],["107"],"no-global-assign","no-unsafe-negation",{"desc":"109","fix":"110"},"Update the dependencies array to be: [needs, token]",{"range":"111","text":"112"},[2424,2426],"[needs, token]"]