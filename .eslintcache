[{"C:\\Users\\Matt\\OneDrive\\Desktop\\git-final-front\\loaves-and-fishes-frontend-Styling\\loaves-and-fishes-frontend-Styling\\src\\index.js":"1","C:\\Users\\Matt\\OneDrive\\Desktop\\git-final-front\\loaves-and-fishes-frontend-Styling\\loaves-and-fishes-frontend-Styling\\src\\App.js":"2","C:\\Users\\Matt\\OneDrive\\Desktop\\git-final-front\\loaves-and-fishes-frontend-Styling\\loaves-and-fishes-frontend-Styling\\src\\reportWebVitals.js":"3","C:\\Users\\Matt\\OneDrive\\Desktop\\git-final-front\\loaves-and-fishes-frontend-Styling\\loaves-and-fishes-frontend-Styling\\src\\components\\categories\\index.js":"4","C:\\Users\\Matt\\OneDrive\\Desktop\\git-final-front\\loaves-and-fishes-frontend-Styling\\loaves-and-fishes-frontend-Styling\\src\\components\\index.js":"5","C:\\Users\\Matt\\OneDrive\\Desktop\\git-final-front\\loaves-and-fishes-frontend-Styling\\loaves-and-fishes-frontend-Styling\\src\\components\\categories\\ViewNeeds.jsx":"6","C:\\Users\\Matt\\OneDrive\\Desktop\\git-final-front\\loaves-and-fishes-frontend-Styling\\loaves-and-fishes-frontend-Styling\\src\\components\\Home.jsx":"7","C:\\Users\\Matt\\OneDrive\\Desktop\\git-final-front\\loaves-and-fishes-frontend-Styling\\loaves-and-fishes-frontend-Styling\\src\\components\\Footer.jsx":"8","C:\\Users\\Matt\\OneDrive\\Desktop\\git-final-front\\loaves-and-fishes-frontend-Styling\\loaves-and-fishes-frontend-Styling\\src\\components\\Navigation.jsx":"9","C:\\Users\\Matt\\OneDrive\\Desktop\\git-final-front\\loaves-and-fishes-frontend-Styling\\loaves-and-fishes-frontend-Styling\\src\\components\\About.jsx":"10","C:\\Users\\Matt\\OneDrive\\Desktop\\git-final-front\\loaves-and-fishes-frontend-Styling\\loaves-and-fishes-frontend-Styling\\src\\components\\Contact.jsx":"11","C:\\Users\\Matt\\OneDrive\\Desktop\\git-final-front\\loaves-and-fishes-frontend-Styling\\loaves-and-fishes-frontend-Styling\\src\\components\\categories\\SubmitNeed.jsx":"12","C:\\Users\\Matt\\OneDrive\\Desktop\\git-final-front\\loaves-and-fishes-frontend-Styling\\loaves-and-fishes-frontend-Styling\\src\\components\\Register.jsx":"13","C:\\Users\\Matt\\OneDrive\\Desktop\\git-final-front\\loaves-and-fishes-frontend-Styling\\loaves-and-fishes-frontend-Styling\\src\\components\\Login.jsx":"14","C:\\Users\\Matt\\OneDrive\\Desktop\\git-final-front\\loaves-and-fishes-frontend-Styling\\loaves-and-fishes-frontend-Styling\\src\\components\\Account.jsx":"15"},{"size":500,"mtime":1611726003970,"results":"16","hashOfConfig":"17"},{"size":1091,"mtime":1611726003901,"results":"18","hashOfConfig":"17"},{"size":362,"mtime":1611726004025,"results":"19","hashOfConfig":"17"},{"size":169,"mtime":1611726004399,"results":"20","hashOfConfig":"17"},{"size":403,"mtime":1611726004257,"results":"21","hashOfConfig":"17"},{"size":7148,"mtime":1611727013920,"results":"22","hashOfConfig":"17"},{"size":1762,"mtime":1611726004165,"results":"23","hashOfConfig":"17"},{"size":482,"mtime":1611726004143,"results":"24","hashOfConfig":"17"},{"size":3657,"mtime":1611726004212,"results":"25","hashOfConfig":"17"},{"size":672,"mtime":1611726004074,"results":"26","hashOfConfig":"17"},{"size":680,"mtime":1611726004121,"results":"27","hashOfConfig":"17"},{"size":9396,"mtime":1611726004352,"results":"28","hashOfConfig":"17"},{"size":3282,"mtime":1611726004235,"results":"29","hashOfConfig":"17"},{"size":2762,"mtime":1611726004186,"results":"30","hashOfConfig":"17"},{"size":1060,"mtime":1611726004099,"results":"31","hashOfConfig":"17"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},"1lw50xl",{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"45","usedDeprecatedRules":"34"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"58","usedDeprecatedRules":"34"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},"C:\\Users\\Matt\\OneDrive\\Desktop\\git-final-front\\loaves-and-fishes-frontend-Styling\\loaves-and-fishes-frontend-Styling\\src\\index.js",[],["65","66"],"C:\\Users\\Matt\\OneDrive\\Desktop\\git-final-front\\loaves-and-fishes-frontend-Styling\\loaves-and-fishes-frontend-Styling\\src\\App.js",[],"C:\\Users\\Matt\\OneDrive\\Desktop\\git-final-front\\loaves-and-fishes-frontend-Styling\\loaves-and-fishes-frontend-Styling\\src\\reportWebVitals.js",[],"C:\\Users\\Matt\\OneDrive\\Desktop\\git-final-front\\loaves-and-fishes-frontend-Styling\\loaves-and-fishes-frontend-Styling\\src\\components\\categories\\index.js",[],"C:\\Users\\Matt\\OneDrive\\Desktop\\git-final-front\\loaves-and-fishes-frontend-Styling\\loaves-and-fishes-frontend-Styling\\src\\components\\index.js",[],"C:\\Users\\Matt\\OneDrive\\Desktop\\git-final-front\\loaves-and-fishes-frontend-Styling\\loaves-and-fishes-frontend-Styling\\src\\components\\categories\\ViewNeeds.jsx",["67","68"],"import React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport { makeStyles } from '@material-ui/core/styles';\nimport Card from '@material-ui/core/Card';\nimport CardActions from '@material-ui/core/CardActions';\nimport CardContent from '@material-ui/core/CardContent';\nimport Button from '@material-ui/core/Button';\nimport Typography from '@material-ui/core/Typography';\nimport IconButton from '@material-ui/core/IconButton';\nimport FavoriteIcon from '@material-ui/icons/Favorite';\n\n//from material UI\n\n\n// Add Post to Favorites.\n//function addToFavorites() {\n//   const [favorites, setFavorites] = useState(\"\")\n\n//  const handleSubmit = (e) => {\n//      e.preventDefault();\n//       const favorites = {\n//           favorites\n//      };\n//         console.log(favorites)\n//linking axios to back end using json as temp.\n//        axios.post(`http://localhost:3000/favorites`,  favorites )\n//        .then(res => {\n//           console.log(res);\n// console.log(res.data);\n//          })\n//   }\n\n\n\n//from material UI for cards\n\nconst useStyles = makeStyles({\n    root: {\n        minWidth: 275,\n    },\n    bullet: {\n        display: 'inline-block',\n        margin: '0 2px',\n        transform: 'scale(0.8)',\n    },\n    title: {\n        fontSize: 14,\n    },\n    pos: {\n        marginBottom: 12,\n    },\n});\n\n\n// View A need post.\nfunction ViewNeeds() {\n    //added from material UI\n    const classes = useStyles();\n    const bull = <span className={classes.bullet}>â€¢</span>;\n    const token = { headers: { Authorization: localStorage.getItem('loginToken') } };\n    const postApi = \"http://localhost:8080/needposts\";\n\n    //Axios - Gets need post from needs.json, hook up to back-end\n    const [needs, setNeeds] = useState([]);\n    const [needFavorite, setNeedFavorite] = useState([])\n\n    useEffect(() => {\n        axios.get(postApi, token)\n            .then(response => {\n                console.log(response);\n                if (response.status === 200) {\n                    setNeeds(response.data);\n                    let temporary = []\n                    needs.forEach(need => {\n                        temporary.push(false)\n\n                    })\n                    setNeedFavorite(temporary)\n                   // localStorage.setItem(\"favorites\", JSON.stringify([]))\n                }\n            })\n    }, [])\n\n    const addFavorites = (e, need) => {\n        console.log(need)\n        let favoriteNeedIndex = needs.map(n => { return n.name }).indexOf(need.name);\n        console.log(needFavorite[favoriteNeedIndex]);\n        if (needFavorite[favoriteNeedIndex] === false) {\n            needFavorite[favoriteNeedIndex] = true;\n            if (localStorage.getItem(\"favorites\")){\n                let currentNeeds = JSON.parse(localStorage.getItem(\"favorites\"))\n                console.log(currentNeeds)\n                currentNeeds.push(need);\n                localStorage.setItem(\"favorites\", JSON.stringify(currentNeeds))\n\n            } else {\n                let temp = []\n                temp.push(need); \n                localStorage.setItem(\"favorites\", JSON.stringify(temp))\n            }\n        }\n    }\n\n\n    //:mailto\n    // const Mailto = ({ email, subject = '', body = '', children }) => {\n    //      let params = subject || body ? '?' : '';\n    //     if (subject) params += `subject=${encodeURIComponent(subject)}`;\n    //      if (body) params += `${subject ? '&' : ''}body=${encodeURIComponent(body)}`;\n\n    //      return <a href={`mailto:${email}${params}`}>{children}</a>;\n    //   };\n    //\n\n    return (\n        <div className=\"viewneeds\">\n            <div class=\"container\">\n                <div class=\"row align-items-center my-4\" style={{ display: 'flex', justifyContent: 'center', margin: 'auto'}}>\n                    <div class=\"col-lg-5\">\n\n\n                        <h1 class=\"font-weight-light\" style={{ display: 'flex', justifyContent: 'center', margin: 5 }}>View Needs</h1>\n\n                        <ul>\n                            {\n                                needs.map(need => {\n\n                                    return (\n                                        <Card className={classes.root} variant=\"outlined\">\n                                            <CardContent>\n                                                <Typography className={classes.title} color=\"textSecondary\" gutterBottom>\n                                                    {need.name}\n                                                </Typography>\n                                                <Typography variant=\"h5\" component=\"h2\">\n                                                    {need.category}\n                                                </Typography>\n\n                                                <Typography className={classes.pos} color=\"textSecondary\">\n                                                    {'Description:'}\n                                                    <br />\n                                                    {need.postContent}\n\n                                                </Typography>\n\n                                                <Typography variant=\"body2\" component=\"p\">\n\n                                                    {'Location:'}\n                                                    <br />\n                                                    {need.city}\n\n                                                </Typography>\n                                                <br />\n                                                <Typography className={classes.pos} color=\"textSecondary\">\n\n                                                    {'Need Amount:'}\n                                                    <br />\n                                                    {need.amount}\n                                                </Typography>\n\n                                                <CardActions>\n                                                    <Button onClick={() => { alert(\"Name: \" + need.name + \"  Email: \" + need.email + \" Phone: \" + need.phoneNumber) }}>Help Meet This Need</Button>\n\n\n                                                </CardActions>\n\n\n  \n\n                                            \n                                                <CardActions disableSpacing>\n                                                    <IconButton aria-label=\"add to favorites\" onClick={(e) => addFavorites(e, need)}>\n\n                                                        <FavoriteIcon />\n                                                    </IconButton>\n                                                </CardActions>\n                                            </CardContent>\n                                        </Card>\n                                        //onChange={(e)=>setFavorites(e.target.value)}\n                                        //onSubmit={handleSubmit}\n                                    )\n                                })\n                            }\n\n                        </ul>\n\n                    </div>\n                </div>\n            </div>\n        </div>\n\n    );\n}\n\n\nexport default ViewNeeds;","C:\\Users\\Matt\\OneDrive\\Desktop\\git-final-front\\loaves-and-fishes-frontend-Styling\\loaves-and-fishes-frontend-Styling\\src\\components\\Home.jsx",[],"C:\\Users\\Matt\\OneDrive\\Desktop\\git-final-front\\loaves-and-fishes-frontend-Styling\\loaves-and-fishes-frontend-Styling\\src\\components\\Footer.jsx",[],"C:\\Users\\Matt\\OneDrive\\Desktop\\git-final-front\\loaves-and-fishes-frontend-Styling\\loaves-and-fishes-frontend-Styling\\src\\components\\Navigation.jsx",[],"C:\\Users\\Matt\\OneDrive\\Desktop\\git-final-front\\loaves-and-fishes-frontend-Styling\\loaves-and-fishes-frontend-Styling\\src\\components\\About.jsx",[],"C:\\Users\\Matt\\OneDrive\\Desktop\\git-final-front\\loaves-and-fishes-frontend-Styling\\loaves-and-fishes-frontend-Styling\\src\\components\\Contact.jsx",[],"C:\\Users\\Matt\\OneDrive\\Desktop\\git-final-front\\loaves-and-fishes-frontend-Styling\\loaves-and-fishes-frontend-Styling\\src\\components\\categories\\SubmitNeed.jsx",["69","70","71","72"],"import React, { useState } from \"react\";\nimport axios from \"axios\";\nimport TextField from '@material-ui/core/TextField';\nimport Input from '@material-ui/core/Input';\nimport Button from '@material-ui/core/Button';\nimport Grid from '@material-ui/core/Grid';\nimport { Redirect } from 'react-router-dom';\n// Submit A need forum post.\nfunction SubmitNeed() {\n    \n    const [name, setName] = useState(\"\")\n    const [postContent, setPostContent] = useState(\"\")\n    const [city, setCity] = useState(\"\")\n    const [category, setCategory] = useState(\"\")\n    const [amount, setAmount] = useState(\"\")\n\n    const [email, setEmail] = useState(\"\")\n    const [phoneNumber, setPhoneNumber] = useState(\"\")\n\n    const token = { headers: { Authorization: localStorage.getItem('loginToken') } };\n    const postApi = \"http://localhost:8080/needposts\";\n\n\n    const handleSubmit = (e) => {\n        e.preventDefault();\n        const needs = {\n            name,\n            postContent,\n            city,\n            category,\n            amount,\n            email,\n            phoneNumber\n        };\n        console.log(needs)\n        //linking axios to back end using json as temp.\n        axios.post(postApi, token, needs)\n            .then(res => {\n                console.log(res);\n                // console.log(res.data);\n            })\n\n            \n    }\n    \n    if (localStorage.getItem(\"loginToken\") === null) {\n        return (<div><h1>Sorry You must be Logged in.</h1>\n            <div class=\"button1\" className='mr-1'>\n                <Button variant=\"outline-dark\" active href=\"./Login\">\n                    Login\n                </Button>\n            </div>\n        </div>\n        );\n    } else {\n        return (\n\n            <div className=\"submitneed\"  >\n                <div class=\"container\" >\n                    {/* added axios styling */}\n                    <div class=\"row align-items-center my-4\" style={{ display: 'flex', justifyContent: 'center', margin: 'auto' }}>\n                        <div class=\"col-lg-5\">\n                            <h1 class=\"font-weight-light mb-4\" style={{ display: 'flex', justifyContent: 'center', margin: 'auto' }}>Submit Need</h1>\n\n                            <form onSubmit={handleSubmit} style={{ display: 'grid', justifyContent: 'center', margin: 'auto' }}>\n                                <label>\n                                    <TextField type=\"text\" name=\"name\" onChange={(e) => setName(e.target.value)}\n                                        id=\"outlined-text\"\n                                        style={{ display: \"flex\", flexDirection: \"row\", justifyContent: 'center', margin: 3 }}\n                                        label=\"Name\"\n                                        InputLabelProps={{\n                                            shrink: true,\n                                        }}\n                                        multiline\n                                        size=\"small\"\n                                        variant=\"outlined\"\n                                        display=\"inline\"\n                                    />\n                                </label>\n                                <label>\n                                    <TextField type=\"text\" name=\"postContent\" onChange={(e) => setPostContent(e.target.value)}\n                                        id=\"outlined-text\"\n                                        style={{ display: \"flex\", flexDirection: \"row\", justifyContent: 'center', margin: 3 }}\n                                        label=\"Post Content\"\n                                        InputLabelProps={{\n                                            shrink: true,\n                                        }}\n                                        multiline\n                                        size=\"small\"\n                                        variant=\"outlined\"\n                                        display=\"inline\"\n                                    />\n                                </label>\n                                <label>\n                                    <TextField type=\"text\" name=\"city\" onChange={(e) => setCity(e.target.value)}\n                                        id=\"outlined-text\"\n                                        style={{ display: \"flex\", flexDirection: \"row\", justifyContent: 'center', margin: 3 }}\n                                        label=\"City\"\n                                        InputLabelProps={{\n                                            shrink: true,\n                                        }}\n                                        multiline\n                                        size=\"small\"\n                                        variant=\"outlined\"\n                                        display=\"inline\"\n                                    />\n                                </label>\n                                <label>\n                                    <TextField type=\"text\" name=\"category\" onChange={(e) => setCategory(e.target.value)}\n                                        id=\"outlined-text\"\n                                        style={{ display: \"flex\", flexDirection: \"row\", justifyContent: 'center', margin: 3 }}\n                                        label=\"Category\"\n                                        InputLabelProps={{\n                                            shrink: true,\n                                        }}\n                                        multiline\n                                        size=\"small\"\n                                        variant=\"outlined\"\n                                        display=\"inline\"\n                                    />\n                                </label>\n                                <label>\n                                    <TextField inputProps={{ className: 'digitsOnly' }} name=\"amount\" onChange={(e) => setAmount(e.target.value)}\n                                        id=\"outlined-number\"\n                                        label=\"Amount\"\n                                        style={{ display: \"flex\", flexDirection: \"row\", justifyContent: 'center', margin: 3 }}\n                                        InputLabelProps={{\n                                            shrink: true,\n                                        }}\n                                        variant=\"outlined\"\n                                        display=\"inline\"\n                                        size=\"small\"\n                                        type=\"number\"\n                                                \n\n                                                />\n                            </label>\n                            <label>\n            <TextField type=\"text\" name=\"email\" onChange={(e) => setEmail(e.target.value)} \n                                                id=\"outlined-text\"\n                                                style={{display:\"flex\", flexDirection:\"row\", justifyContent: 'center', margin: 3 }}\n                                                label=\"Email\"\n                                                InputLabelProps={{\n                                                    shrink: true,\n                                                }}\n                                                multiline\n                                                size=\"small\"\n                                                variant=\"outlined\" \n                                                display=\"inline\"\n                                                />\n                            </label>\n                            <label>                         \n            <TextField inputProps={{className: 'digitsOnly' }}  name=\"phoneNumber\" onChange={(e) => setPhoneNumber(e.target.value)} \n                                                id=\"outlined-number\"\n                                                label=\"Phone Number\"\n                                                style={{display:\"flex\", flexDirection:\"row\", justifyContent: 'center', margin: 3 }}\n                                                InputLabelProps={{\n                                                    shrink: true,\n                                                }}\n                                                variant=\"outlined\"\n                                                display=\"inline\"\n                                                size=\"small\"\n                                                type=\"number\"\n                                                \n                                                />\n                            </label>\n                            \n\n                            {/* button to submit and redirect to viewneeds */}\n                            <Button id=\"submitButton\" type=\"submit\" variant=\"outlined\" color=\"primary\" size=\"small\"\n                            style={{display:\"flex\", flexDirection:\"row\", justifyContent: 'center', margin: 3 }} display=\"flex\"\n                            disableElevation display=\"inline\"  \n                            // onClick={event => window.location.href='/viewneeds'}\n                            >Add</Button>\n                        </form>\n                        \n                        </div>\n                    </div>\n                </div>\n            </div>\n        \n        );\n\n    }\n}\n\n\nexport default SubmitNeed;\n","C:\\Users\\Matt\\OneDrive\\Desktop\\git-final-front\\loaves-and-fishes-frontend-Styling\\loaves-and-fishes-frontend-Styling\\src\\components\\Register.jsx",[],"C:\\Users\\Matt\\OneDrive\\Desktop\\git-final-front\\loaves-and-fishes-frontend-Styling\\loaves-and-fishes-frontend-Styling\\src\\components\\Login.jsx",[],"C:\\Users\\Matt\\OneDrive\\Desktop\\git-final-front\\loaves-and-fishes-frontend-Styling\\loaves-and-fishes-frontend-Styling\\src\\components\\Account.jsx",[],{"ruleId":"73","replacedBy":"74"},{"ruleId":"75","replacedBy":"76"},{"ruleId":"77","severity":1,"message":"78","line":59,"column":11,"nodeType":"79","messageId":"80","endLine":59,"endColumn":15},{"ruleId":"81","severity":1,"message":"82","line":82,"column":8,"nodeType":"83","endLine":82,"endColumn":10,"suggestions":"84"},{"ruleId":"77","severity":1,"message":"85","line":4,"column":8,"nodeType":"79","messageId":"80","endLine":4,"endColumn":13},{"ruleId":"77","severity":1,"message":"86","line":6,"column":8,"nodeType":"79","messageId":"80","endLine":6,"endColumn":12},{"ruleId":"77","severity":1,"message":"87","line":7,"column":10,"nodeType":"79","messageId":"80","endLine":7,"endColumn":18},{"ruleId":"88","severity":1,"message":"89","line":172,"column":46,"nodeType":"90","endLine":172,"endColumn":62},"no-native-reassign",["91"],"no-negated-in-lhs",["92"],"no-unused-vars","'bull' is assigned a value but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'needs' and 'token'. Either include them or remove the dependency array.","ArrayExpression",["93"],"'Input' is defined but never used.","'Grid' is defined but never used.","'Redirect' is defined but never used.","react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute","no-global-assign","no-unsafe-negation",{"desc":"94","fix":"95"},"Update the dependencies array to be: [needs, token]",{"range":"96","text":"97"},[2336,2338],"[needs, token]"]