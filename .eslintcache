[{"C:\\Users\\Matt\\OneDrive\\Desktop\\Final\\Front\\src\\index.js":"1","C:\\Users\\Matt\\OneDrive\\Desktop\\Final\\Front\\src\\reportWebVitals.js":"2","C:\\Users\\Matt\\OneDrive\\Desktop\\Final\\Front\\src\\App.js":"3","C:\\Users\\Matt\\OneDrive\\Desktop\\Final\\Front\\src\\components\\categories\\index.js":"4","C:\\Users\\Matt\\OneDrive\\Desktop\\Final\\Front\\src\\components\\index.js":"5","C:\\Users\\Matt\\OneDrive\\Desktop\\Final\\Front\\src\\components\\Navigation.jsx":"6","C:\\Users\\Matt\\OneDrive\\Desktop\\Final\\Front\\src\\components\\categories\\ViewNeeds.jsx":"7","C:\\Users\\Matt\\OneDrive\\Desktop\\Final\\Front\\src\\components\\categories\\SubmitNeed.jsx":"8","C:\\Users\\Matt\\OneDrive\\Desktop\\Final\\Front\\src\\components\\Home.jsx":"9","C:\\Users\\Matt\\OneDrive\\Desktop\\Final\\Front\\src\\components\\About.jsx":"10","C:\\Users\\Matt\\OneDrive\\Desktop\\Final\\Front\\src\\components\\Footer.jsx":"11","C:\\Users\\Matt\\OneDrive\\Desktop\\Final\\Front\\src\\components\\Contact.jsx":"12","C:\\Users\\Matt\\OneDrive\\Desktop\\Final\\Front\\src\\components\\Register.jsx":"13","C:\\Users\\Matt\\OneDrive\\Desktop\\Final\\Front\\src\\components\\Account.jsx":"14","C:\\Users\\Matt\\OneDrive\\Desktop\\Final\\Front\\src\\components\\Login.jsx":"15","C:\\Users\\Matt\\OneDrive\\Desktop\\Final\\Front\\src\\components\\Stylesheets\\theme.js":"16"},{"size":500,"mtime":1611728338601,"results":"17","hashOfConfig":"18"},{"size":362,"mtime":1611728338659,"results":"19","hashOfConfig":"18"},{"size":1093,"mtime":1611797770552,"results":"20","hashOfConfig":"18"},{"size":169,"mtime":1611728339125,"results":"21","hashOfConfig":"18"},{"size":403,"mtime":1611728338963,"results":"22","hashOfConfig":"18"},{"size":3170,"mtime":1611786223511,"results":"23","hashOfConfig":"18"},{"size":8370,"mtime":1611819707117,"results":"24","hashOfConfig":"18"},{"size":9814,"mtime":1611811377786,"results":"25","hashOfConfig":"18"},{"size":1952,"mtime":1611811290216,"results":"26","hashOfConfig":"18"},{"size":2813,"mtime":1611813911610,"results":"27","hashOfConfig":"18"},{"size":482,"mtime":1611728338799,"results":"28","hashOfConfig":"18"},{"size":680,"mtime":1611728338771,"results":"29","hashOfConfig":"18"},{"size":3282,"mtime":1611728338936,"results":"30","hashOfConfig":"18"},{"size":1430,"mtime":1611811359525,"results":"31","hashOfConfig":"18"},{"size":2762,"mtime":1611799324752,"results":"32","hashOfConfig":"18"},{"size":278,"mtime":1611797528710,"results":"33","hashOfConfig":"18"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},"dpg479",{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"47","usedDeprecatedRules":"36"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"50","messages":"51","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"52","usedDeprecatedRules":"36"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"69"},"C:\\Users\\Matt\\OneDrive\\Desktop\\Final\\Front\\src\\index.js",[],["70","71"],"C:\\Users\\Matt\\OneDrive\\Desktop\\Final\\Front\\src\\reportWebVitals.js",[],"C:\\Users\\Matt\\OneDrive\\Desktop\\Final\\Front\\src\\App.js",[],"C:\\Users\\Matt\\OneDrive\\Desktop\\Final\\Front\\src\\components\\categories\\index.js",[],"C:\\Users\\Matt\\OneDrive\\Desktop\\Final\\Front\\src\\components\\index.js",[],"C:\\Users\\Matt\\OneDrive\\Desktop\\Final\\Front\\src\\components\\Navigation.jsx",["72"],"import React from \"react\";\nimport { Link, withRouter } from \"react-router-dom\";\nimport { Navbar, Nav } from \"react-bootstrap\";\n// Setting up the navigation bar and links\n\nfunction Navigation(props) {\n    return (\n        <div>\n            <Navbar collapseOnSelect expand=\"lg\" bg=\"dark\" variant=\"dark\">\n                <Navbar.Brand href=\"/\">Loaves and Fish</Navbar.Brand>\n                <Navbar.Toggle aria-controls=\"responsive-navbar-nav\" />\n                <Navbar.Collapse id=\"responsive-navbar-nav\">\n                    <ul class=\"navbar-nav ml-auto\">\n                        <li\n                            class={`nav-item ${props.location.pathname === \"/\" ? \"active\" : \"\"\n                                }`}\n                        >\n                            <Link class=\"nav-link\" to=\"/\">\n                                Home\n                                <span class=\"sr-only\">(current)</span>\n                            </Link>\n                        </li>\n\n                        <li\n                            class={`nav-item ${props.location.pathname === \"/ViewNeeds\" ? \"active\" : \"\"\n                                }`}\n                        >\n                            <Link class=\"nav-link\" to=\"/viewneeds\">\n                                View Needs\n                                <span class=\"sr-only\">(current)</span>\n                            </Link>\n                        </li>\n\n                        <li\n                            class={`nav-item ${props.location.pathname === \"/SubmitNeed\" ? \"active\" : \"\"\n                                }`}\n                        >\n                            <Link class=\"nav-link\" to=\"/submitneed\">\n                                Submit Need\n                                <span class=\"sr-only\">(current)</span>\n                            </Link>\n                        </li>\n\n                        <li\n                            class={`nav-item ${props.location.pathname === \"/about\" ? \"active\" : \"\"\n                                }`}\n                        >\n                            <Link class=\"nav-link\" to=\"/about\">\n                                About\n                            </Link>\n                        </li>\n                        <li\n                            class={`nav-item ${props.location.pathname === \"/contact\" ? \"active\" : \"\"\n                                }`}\n                        >\n                            <Link class=\"nav-link\" to=\"/contact\">\n                                Contact\n                            </Link>\n                        </li>\n\n                        <li\n                            class={`nav-item ${props.location.pathname === \"/Account\" ? \"active\" : \"\"\n                                }`}\n                        >\n                            <Link class=\"nav-link\" to=\"/account\">\n                                Account\n                                <span class=\"sr-only\">(current)</span>\n                            </Link>\n                        </li>\n\n                    </ul>\n                </Navbar.Collapse>\n            </Navbar>\n        </div>\n    );\n}\n\nexport default withRouter(Navigation);","C:\\Users\\Matt\\OneDrive\\Desktop\\Final\\Front\\src\\components\\categories\\ViewNeeds.jsx",["73","74","75"],"C:\\Users\\Matt\\OneDrive\\Desktop\\Final\\Front\\src\\components\\categories\\SubmitNeed.jsx",["76","77","78","79"],"import React, { useState } from \"react\";\nimport axios from \"axios\";\nimport TextField from '@material-ui/core/TextField';\nimport Input from '@material-ui/core/Input';\nimport Button from '@material-ui/core/Button';\nimport Grid from '@material-ui/core/Grid';\nimport { Redirect } from 'react-router-dom';\nimport background from \"../Stylesheets/pic.png\";\nimport \"../Stylesheets/Register.css\";\n// Submit A need forum post.\nfunction SubmitNeed() {\n    \n    const [name, setName] = useState(\"\")\n    const [postContent, setPostContent] = useState(\"\")\n    const [city, setCity] = useState(\"\")\n    const [category, setCategory] = useState(\"\")\n    const [amount, setAmount] = useState(\"\")\n\n    const [email, setEmail] = useState(\"\")\n    const [phoneNumber, setPhoneNumber] = useState(\"\")\n\n    const token = { headers: { Authorization: localStorage.getItem('loginToken') } };\n    const postApi = \"http://localhost:8080/needposts\";\n\n\n    const handleSubmit = (e) => {\n        e.preventDefault();\n        const needs = {\n            name,\n            postContent,\n            city,\n            category,\n            amount,\n            email,\n            phoneNumber\n        };\n        console.log(needs)\n        //linking axios to back end using json as temp.\n        axios.post(postApi, needs, token)\n            .then(res => {\n                console.log(res);\n                // console.log(res.data);\n            })\n\n            \n    }\n    \n    if (localStorage.getItem(\"loginToken\") === null) {\n        return (\n            <div>\n\n                <img src={background} style={{ height: '50%', width: '65%', marginTop: '4vh' }} alt=\"\" />\n                <div class=\"button1\" className='mr-1'>\n                    <Button style={{ marginRight: 8, marginTop: '3vh' }} variant=\"outline-dark\" active href=\"./Register\">\n                        Register\n                        </Button>\n                    <Button style={{ marginTop: '3vh' }} variant=\"outline-dark\" active href=\"./Login\">\n                        Login\n                         </Button>\n                </div>\n\n            </div>\n        );\n    } else {\n        return (\n\n            <div className=\"submitneed\"  >\n                <div class=\"container\" >\n                    {/* added axios styling */}\n                    <div class=\"row align-items-center my-4\" style={{ display: 'flex', justifyContent: 'center', margin: 'auto' }}>\n                        <div class=\"col-lg-5\">\n                            <h1 class=\"font-weight-light mb-4\" style={{ display: 'flex', justifyContent: 'center', margin: 'auto' }}>Submit Need</h1>\n\n                            <form onSubmit={handleSubmit} style={{ display: 'grid', justifyContent: 'center', margin: 'auto' }}>\n                                <label>\n                                    <TextField type=\"text\" name=\"name\" onChange={(e) => setName(e.target.value)}\n                                        id=\"outlined-text\"\n                                        style={{ display: \"flex\", flexDirection: \"row\", justifyContent: 'center', margin: 3 }}\n                                        label=\"Name\"\n                                        InputLabelProps={{\n                                            shrink: true,\n                                        }}\n                                        multiline\n                                        size=\"small\"\n                                        variant=\"outlined\"\n                                        display=\"inline\"\n                                    />\n                                </label>\n                                <label>\n                                    <TextField type=\"text\" name=\"postContent\" onChange={(e) => setPostContent(e.target.value)}\n                                        id=\"outlined-text\"\n                                        style={{ display: \"flex\", flexDirection: \"row\", justifyContent: 'center', margin: 3 }}\n                                        label=\"Post Content\"\n                                        InputLabelProps={{\n                                            shrink: true,\n                                        }}\n                                        multiline\n                                        size=\"small\"\n                                        variant=\"outlined\"\n                                        display=\"inline\"\n                                    />\n                                </label>\n                                <label>\n                                    <TextField type=\"text\" name=\"city\" onChange={(e) => setCity(e.target.value)}\n                                        id=\"outlined-text\"\n                                        style={{ display: \"flex\", flexDirection: \"row\", justifyContent: 'center', margin: 3 }}\n                                        label=\"City\"\n                                        InputLabelProps={{\n                                            shrink: true,\n                                        }}\n                                        multiline\n                                        size=\"small\"\n                                        variant=\"outlined\"\n                                        display=\"inline\"\n                                    />\n                                </label>\n                                <label>\n                                    <TextField type=\"text\" name=\"category\" onChange={(e) => setCategory(e.target.value)}\n                                        id=\"outlined-text\"\n                                        style={{ display: \"flex\", flexDirection: \"row\", justifyContent: 'center', margin: 3 }}\n                                        label=\"Category\"\n                                        InputLabelProps={{\n                                            shrink: true,\n                                        }}\n                                        multiline\n                                        size=\"small\"\n                                        variant=\"outlined\"\n                                        display=\"inline\"\n                                    />\n                                </label>\n                                <label>\n                                    <TextField inputProps={{ className: 'digitsOnly' }} name=\"amount\" onChange={(e) => setAmount(e.target.value)}\n                                        id=\"outlined-number\"\n                                        label=\"Amount\"\n                                        style={{ display: \"flex\", flexDirection: \"row\", justifyContent: 'center', margin: 3 }}\n                                        InputLabelProps={{\n                                            shrink: true,\n                                        }}\n                                        variant=\"outlined\"\n                                        display=\"inline\"\n                                        size=\"small\"\n                                        type=\"number\"\n                                                \n\n                                                />\n                            </label>\n                            <label>\n            <TextField type=\"text\" name=\"email\" onChange={(e) => setEmail(e.target.value)} \n                                                id=\"outlined-text\"\n                                                style={{display:\"flex\", flexDirection:\"row\", justifyContent: 'center', margin: 3 }}\n                                                label=\"Email\"\n                                                InputLabelProps={{\n                                                    shrink: true,\n                                                }}\n                                                multiline\n                                                size=\"small\"\n                                                variant=\"outlined\" \n                                                display=\"inline\"\n                                                />\n                            </label>\n                            <label>                         \n            <TextField inputProps={{className: 'digitsOnly' }}  name=\"phoneNumber\" onChange={(e) => setPhoneNumber(e.target.value)} \n                                                id=\"outlined-number\"\n                                                label=\"Phone Number\"\n                                                style={{display:\"flex\", flexDirection:\"row\", justifyContent: 'center', margin: 3 }}\n                                                InputLabelProps={{\n                                                    shrink: true,\n                                                }}\n                                                variant=\"outlined\"\n                                                display=\"inline\"\n                                                size=\"small\"\n                                                type=\"number\"\n                                                \n                                                />\n                            </label>\n                            \n\n                            {/* button to submit and redirect to viewneeds */}\n                            <Button id=\"submitButton\" type=\"submit\" variant=\"outlined\" color=\"primary\" size=\"small\"\n                            style={{display:\"flex\", flexDirection:\"row\", justifyContent: 'center', margin: 3 }} display=\"flex\"\n                            disableElevation display=\"inline\"  \n                            // onClick={event => window.location.href='/viewneeds'}\n                            >Add</Button>\n                        </form>\n                        \n                        </div>\n                    </div>\n                </div>\n            </div>\n        \n        );\n\n    }\n}\n\n\nexport default SubmitNeed;\n","C:\\Users\\Matt\\OneDrive\\Desktop\\Final\\Front\\src\\components\\Home.jsx",[],"C:\\Users\\Matt\\OneDrive\\Desktop\\Final\\Front\\src\\components\\About.jsx",[],"C:\\Users\\Matt\\OneDrive\\Desktop\\Final\\Front\\src\\components\\Footer.jsx",[],"C:\\Users\\Matt\\OneDrive\\Desktop\\Final\\Front\\src\\components\\Contact.jsx",[],"C:\\Users\\Matt\\OneDrive\\Desktop\\Final\\Front\\src\\components\\Register.jsx",[],"C:\\Users\\Matt\\OneDrive\\Desktop\\Final\\Front\\src\\components\\Account.jsx",[],"C:\\Users\\Matt\\OneDrive\\Desktop\\Final\\Front\\src\\components\\Login.jsx",[],"C:\\Users\\Matt\\OneDrive\\Desktop\\Final\\Front\\src\\components\\Stylesheets\\theme.js",[],["80","81"],{"ruleId":"82","replacedBy":"83"},{"ruleId":"84","replacedBy":"85"},{"ruleId":"86","severity":1,"message":"87","line":3,"column":18,"nodeType":"88","messageId":"89","endLine":3,"endColumn":21},{"ruleId":"86","severity":1,"message":"90","line":61,"column":11,"nodeType":"88","messageId":"89","endLine":61,"endColumn":15},{"ruleId":"91","severity":1,"message":"92","line":84,"column":8,"nodeType":"93","endLine":84,"endColumn":10,"suggestions":"94"},{"ruleId":"95","severity":1,"message":"96","line":148,"column":76,"nodeType":"97","endLine":148,"endColumn":92},{"ruleId":"86","severity":1,"message":"98","line":4,"column":8,"nodeType":"88","messageId":"89","endLine":4,"endColumn":13},{"ruleId":"86","severity":1,"message":"99","line":6,"column":8,"nodeType":"88","messageId":"89","endLine":6,"endColumn":12},{"ruleId":"86","severity":1,"message":"100","line":7,"column":10,"nodeType":"88","messageId":"89","endLine":7,"endColumn":18},{"ruleId":"95","severity":1,"message":"96","line":181,"column":46,"nodeType":"97","endLine":181,"endColumn":62},{"ruleId":"82","replacedBy":"101"},{"ruleId":"84","replacedBy":"102"},"no-native-reassign",["103"],"no-negated-in-lhs",["104"],"no-unused-vars","'Nav' is defined but never used.","Identifier","unusedVar","'bull' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'needs' and 'token'. Either include them or remove the dependency array.","ArrayExpression",["105"],"react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute","'Input' is defined but never used.","'Grid' is defined but never used.","'Redirect' is defined but never used.",["103"],["104"],"no-global-assign","no-unsafe-negation",{"desc":"106","fix":"107"},"Update the dependencies array to be: [needs, token]",{"range":"108","text":"109"},[2424,2426],"[needs, token]"]